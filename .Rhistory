Cluster = col_integer(),
distribution = col_character(),
k  = col_integer(),
Trace = col_character() ,
stats.attr = col_character(),
Size  = col_integer(),
Fraction = col_double()
)
)
glimpse(dados_carga)
View(dados_carga)
dados_carga <- read_table(here::here(params$arquivo_dados), col_types =
cols(
Param1 = col_double(),
Param2 = col_double(),
Cluster = col_integer(),
distribution = col_character(),
k  = col_integer(),
Trace = col_character() ,
stats.attr = col_character(),
Size  = col_integer(),
Fraction = col_double()
)
)
glimpse(dados_carga)
View(dados_carga)
View(params)
library(tidyverse)
library(broom)
library(ggbeeswarm)
library(gridExtra)
theme_set(theme_bw())
knitr::opts_chunk$set(tidy = FALSE,
fig.width = 6,
fig.height = 5)
dados_carga <- read_table(here::here(params$arquivo_dados), col_types =
cols(
Param1 = col_double(),
Param2 = col_double(),
Cluster = col_integer(),
distribution = col_character(),
k  = col_integer(),
Trace = col_character() ,
stats.attr = col_character(),
Size  = col_integer(),
Fraction = col_double()
)
)
glimpse(dados_carga)
dados_carga <- read_table(here::here(params$arquivo_dados))
#                          , col_types =
#                      cols(
#                            Param1 = col_double(),
#                            Param2 = col_double(),
#                            Cluster = col_integer(),
#                            distribution = col_character(),
#                            k  = col_integer(),
#                            Trace = col_character() ,
#                            stats.attr = col_character(),
#                            Size  = col_integer(),
#                            Fraction = col_double()
#                      )
#                    )
glimpse(dados_carga)
library(tidyverse)
library(broom)
library(ggbeeswarm)
library(gridExtra)
theme_set(theme_bw())
knitr::opts_chunk$set(tidy = FALSE,
fig.width = 6,
fig.height = 5)
dados_carga <- read_table(here::here(params$arquivo_dados))
#                          , col_types =
#                      cols(
#                            Param1 = col_double(),
#                            Param2 = col_double(),
#                            Cluster = col_integer(),
#                            distribution = col_character(),
#                            k  = col_integer(),
#                            Trace = col_character() ,
#                            stats.attr = col_character(),
#                            Size  = col_integer(),
#                            Fraction = col_double()
#                      )
#                    )
glimpse(dados_carga)
library(tidyverse)
library(broom)
library(ggbeeswarm)
library(gridExtra)
theme_set(theme_bw())
knitr::opts_chunk$set(tidy = FALSE,
fig.width = 6,
fig.height = 5)
dados_carga <- read_table(here::here(params$arquivo_dados),
cols(
`Param1 Param2 Cluster distribution k Trace stats.attr Size Fraction` = col_character()
)
)
View(params)
dados_carga <- read_table(here::here(params$arquivo_dados),
cols(`Param1 Param2 Cluster distribution k Trace stats.attr Size Fraction` = col_character())
)
dados_carga <- read_table(here::here(params$arquivo_dados),
cols("Param1 Param2 Cluster distribution k Trace stats.attr Size Fraction" = col_character())
)
dados_carga <- read_table(here::here(params$arquivo_dados), col_names =
cols("Param1 Param2 Cluster distribution k Trace stats.attr Size Fraction" = col_character())
)
dados_carga <- read_table(here::here(params$arquivo_dados), col_names =
cols(`Param1 Param2 Cluster distribution k Trace stats.attr Size Fraction` = col_character())
)
dados_carga <- read_table(here::here(params$arquivo_dados)
#                          , col_types =
#                      cols(
#                            Param1 = col_double(),
#                            Param2 = col_double(),
#                            Cluster = col_integer(),
#                            distribution = col_character(),
#                            k  = col_integer(),
#                            Trace = col_character() ,
#                            stats.attr = col_character(),
#                            Size  = col_integer(),
#                            Fraction = col_double()
#                      )
#                    )
glimpse(dados_carga)
dados_carga <- read_table(here::here(params$arquivo_dados))
#                          , col_types =
#                      cols(
#                            Param1 = col_double(),
#                            Param2 = col_double(),
#                            Cluster = col_integer(),
#                            distribution = col_character(),
#                            k  = col_integer(),
#                            Trace = col_character() ,
#                            stats.attr = col_character(),
#                            Size  = col_integer(),
#                            Fraction = col_double()
#                      )
#                    )
glimpse(dados_carga)
dados_carga <- read_table(here::here(params$arquivo_dados), col_names = TRUE)
#                          , col_types =
#                      cols(
#                            Param1 = col_double(),
#                            Param2 = col_double(),
#                            Cluster = col_integer(),
#                            distribution = col_character(),
#                            k  = col_integer(),
#                            Trace = col_character() ,
#                            stats.attr = col_character(),
#                            Size  = col_integer(),
#                            Fraction = col_double()
#                      )
#                    )
glimpse(dados_carga)
library(tidyverse)
library(broom)
library(ggbeeswarm)
library(gridExtra)
theme_set(theme_bw())
knitr::opts_chunk$set(tidy = FALSE,
fig.width = 6,
fig.height = 5)
dados_carga <- read_table(here::here(params$arquivo_dados), col_names = TRUE)
#                          , col_types =
#                      cols(
#                            Param1 = col_double(),
#                            Param2 = col_double(),
#                            Cluster = col_integer(),
#                            distribution = col_character(),
#                            k  = col_integer(),
#                            Trace = col_character() ,
#                            stats.attr = col_character(),
#                            Size  = col_integer(),
#                            Fraction = col_double()
#                      )
#                    )
glimpse(dados_carga)
View(dados_carga)
View(dados_carga)
dados_carga <- read_table2(here::here(params$arquivo_dados), col_names = TRUE)
#                          , col_types =
#                      cols(
#                            Param1 = col_double(),
#                            Param2 = col_double(),
#                            Cluster = col_integer(),
#                            distribution = col_character(),
#                            k  = col_integer(),
#                            Trace = col_character() ,
#                            stats.attr = col_character(),
#                            Size  = col_integer(),
#                            Fraction = col_double()
#                      )
#                    )
glimpse(dados_carga)
dados_carga <- read_table2(here::here(params$arquivo_dados), col_names = TRUE)
glimpse(dados_carga)
dados_carga %>%
ggplot(aes(x = k, fill = Trace, color = distribution))
dados_carga %>%
ggplot(aes(x = k, fill = Trace, color = distribution))
+ geom_point()
dados_carga %>%
ggplot(aes(x = k, fill = Trace, color = distribution))
+ geom_point(alpha = 0.3)
dados_carga %>%
ggplot(aes(x = k, fill = Trace, color = distribution))
+ geom_jitter(height = .1, alpha = .6)
dados_carga %>%
ggplot(aes(x = k, fill = Trace, color = distribution)) +
geom_jitter(height = .1, alpha = .6)
dados_carga %>%
ggplot(aes(x = k, y = Trace, color = distribution)) +
geom_jitter(height = .1, alpha = .6)
dados_carga %>%
ggplot(aes(x = k, y = Fraction, color = distribution)) +
geom_jitter(height = .1, alpha = .6)
dados_carga %>%
ggplot(aes(x = k, y = Param1, color = distribution)) +
geom_jitter(height = .1, alpha = .6)
dados_carga %>%
ggplot(aes(x = k, y = Param2, color = distribution)) +
geom_jitter(height = .1, alpha = .6)
dados_carga %>%
ggplot(aes(x = k, y = Param1, color = distribution)) +
geom_jitter(height = .1, alpha = .6)
dados_carga %>%
ggplot(aes(x = k, y = 2^Param1, color = distribution)) +
geom_jitter(height = .1, alpha = .6)
dados_carga %>%
ggplot(aes(x = k, y = Param1, color = distribution)) +
geom_jitter(height = .1, alpha = .6)
dados_carga %>%
ggplot(aes(x = k, y = Fraction, color = distribution)) +
geom_jitter(height = .1, alpha = .6)
dados_carga %>%
ggplot(aes(x = k, y = 2^Fraction, color = distribution)) +
geom_jitter(height = .1, alpha = .6)
dados_carga %>%
ggplot(aes(x = k, y = Fraction, color = distribution)) +
geom_jitter(height = .1, alpha = .6)
# NOT RUN {
##-- Simple didactical  ecdf  example :
x <- rnorm(12)
Fn <- ecdf(x)
Fn     # a *function*
Fn(x)  # returns the percentiles for x
tt <- seq(-2, 2, by = 0.1)
12 * Fn(tt) # Fn is a 'simple' function {with values k/12}
summary(Fn)
##--> see below for graphics
knots(Fn)  # the unique data values {12 of them if there were no ties}
y <- round(rnorm(12), 1); y[3] <- y[1]
Fn12 <- ecdf(y)
Fn12
knots(Fn12) # unique values (always less than 12!)
summary(Fn12)
summary.stepfun(Fn12)
## Advanced: What's inside the function closure?
ls(environment(Fn12))
##[1] "f"  "method"  "n"  "x"  "y"  "yleft"  "yright"
utils::ls.str(environment(Fn12))
stopifnot(all.equal(quantile(Fn12), quantile(y)))
###----------------- Plotting --------------------------
require(graphics)
op <- par(mfrow = c(3, 1), mgp = c(1.5, 0.8, 0), mar =  .1+c(3,3,2,1))
F10 <- ecdf(rnorm(10))
summary(F10)
plot(F10)
plot(F10, verticals = TRUE, do.points = FALSE)
plot(Fn12 , lwd = 2) ; mtext("lwd = 2", adj = 1)
xx <- unique(sort(c(seq(-3, 2, length = 201), knots(Fn12))))
lines(xx, Fn12(xx), col = "blue")
abline(v = knots(Fn12), lty = 2, col = "gray70")
plot(xx, Fn12(xx), type = "o", cex = .1)  #- plot.default {ugly}
plot(Fn12, col.hor = "red", add =  TRUE)  #- plot method
abline(v = knots(Fn12), lty = 2, col = "gray70")
## luxury plot
plot(Fn12, verticals = TRUE, col.points = "blue",
col.hor = "red", col.vert = "bisque")
##-- this works too (automatic call to  ecdf(.)):
plot.ecdf(rnorm(24))
title("via  simple  plot.ecdf(x)", adj = 1)
par(op)
# }
dados_carga %>%
ggplot(aes(x = k, y = Fraction, color = distribution)) +
geom_jitter(height = .1, alpha = .6) +
facet_grid(Trace ~ ., scales = "free_y")
dados_carga %>%
ggplot(aes(x = k, y = Fraction, color = distribution)) +
geom_jitter(height = .1, alpha = .6) +
facet_grid(reorder(Trace) ~ ., scales = "free_y")
dados_carga %>%
ggplot(aes(x = k, y = Fraction, color = distribution)) +
geom_jitter(height = .1, alpha = .6) +
facet_grid(reorder(Trace, media) ~ ., scales = "free_y")
dados_carga %>%
ggplot(aes(x = k, y = Fraction, color = distribution)) +
geom_jitter(height = .1, alpha = .6) +
facet_grid(Trace ~ ., scales = "free_y")
dados_carga %>%
ggplot(aes(x = k, y = Fraction, color = distribution)) +
geom_jitter(height = .1, alpha = .6) +
facet_wrap(Trace ~ ., scales = "free_y")
dados_carga %>%
ggplot(aes(x = k, y = Fraction, color = distribution)) +
geom_jitter(height = .1, alpha = .6) +
#  facet_wrap(Trace ~ ., scales = "free_y")
facet_grid(Trace ~ ., scales = "free_y")
dados_carga %>%
ggplot(aes(x = k, y = Fraction, color = distribution)) +
geom_jitter(height = .1, alpha = .6) +
facet_wrap(Trace ~ ., scales = "free_y")
#  facet_grid(Trace ~ ., scales = "free_y")
dados_carga %>%
ggplot(aes(x = k, y = Fraction, color = distribution)) +
geom_jitter(height = .1, alpha = .6)
+ facet_wrap(Trace ~ ., scales = "free_y")
dados_carga %>%
ggplot(aes(x = k, y = Fraction, color = distribution)) +
geom_jitter(height = .1, alpha = .6)
+ facet_wrap(Trace ~ ., scales = "free_y")
dados_carga %>%
ggplot(aes(x = k, y = Fraction, color = distribution)) +
geom_jitter(height = .1, alpha = .6) +
facet_wrap(Trace ~ ., scales = "free_y")
#  facet_grid(Trace ~ ., scales = "free_y")
library(tidyverse)
library(broom)
library(ggbeeswarm)
library(gridExtra)
theme_set(theme_bw())
knitr::opts_chunk$set(tidy = FALSE,
fig.width = 6,
fig.height = 5)
dados_carga <- read_table2(here::here(params$arquivo_dados), col_names = TRUE)
glimpse(dados_carga)
dados_carga %>%
ggplot(aes(x = k, y = Fraction, color = distribution)) +
geom_jitter(height = .1, alpha = .6) +
facet_wrap(Trace ~ ., scales = "free_y")
#  facet_grid(Trace ~ ., scales = "free_y")
library(tidyverse)
library(broom)
library(ggbeeswarm)
library(gridExtra)
theme_set(theme_bw())
knitr::opts_chunk$set(tidy = FALSE,
fig.width = 6,
fig.height = 5)
dados_carga <- read_table2(here::here(params$arquivo_dados), col_names = TRUE)
glimpse(dados_carga)
dados_carga %>%
ggplot(aes(x = k, y = Fraction, color = distribution)) +
geom_jitter(height = .1, alpha = .6) +
facet_wrap(Trace ~ ., scales = "free_y")
#  facet_grid(Trace ~ ., scales = "free_y")
library(tidyverse)
library(broom)
library(ggbeeswarm)
library(gridExtra)
theme_set(theme_bw())
knitr::opts_chunk$set(tidy = FALSE,
fig.width = 6,
fig.height = 5)
dados_carga <- read_table2(here::here(params$arquivo_dados), col_names = TRUE)
glimpse(dados_carga)
dados_carga %>%
ggplot(aes(x = k, y = Fraction, color = distribution)) +
geom_jitter(height = .1, alpha = .6) +
facet_wrap(Trace ~ ., scales = "free_y")
#  facet_grid(Trace ~ ., scales = "free_y")
---
title: "Análise da replicação de Carvalho et al. 2012 - dados de saída"
output:
html_document:
df_print: paged
code_folding: hide
theme: sandstone
params:
arquivo_dados_saida_1: "results/20210629/workload_clust_1spt_200ups_gwa-t1.txt"
---
```{r echo=FALSE, message=FALSE, warning=FALSE}
library(tidyverse)
library(broom)
library(ggbeeswarm)
library(gridExtra)
theme_set(theme_bw())
knitr::opts_chunk$set(tidy = FALSE,
fig.width = 6,
fig.height = 5)
```
library(tidyverse)
library(broom)
library(ggbeeswarm)
library(gridExtra)
theme_set(theme_bw())
knitr::opts_chunk$set(tidy = FALSE,
fig.width = 6,
fig.height = 5)
dados_saida <- read_table2(here::here(params$arquivo_dados_saida_1), col_names = TRUE)
glimpse(dados_saida)
dados_saida %>%
ggplot(aes(x = k, y = Fraction, color = distribution)) +
geom_jitter(height = .1, alpha = .6) +
facet_wrap(Trace ~ ., scales = "free_y")
View(dados_saida)
carga_trabalho_sintetica_gwa-t1 <- read_table2(here::here(params$arquivo_dados_saida_1), col_names = TRUE)
carga_trabalho_sintetica_gwa_t1 <- read_table2(here::here(params$arquivo_dados_saida_1), col_names = TRUE)
glimpse(carga_trabalho_sintetica_gwa_t1)
View(carga_trabalho_sintetica_gwa_t1)
View(dados_carga)
dados_carga %>%
ggplot(aes(x = k, y = Fraction, color = distribution)) +
geom_jitter(height = .1, alpha = .6) +
facet_wrap(stat.attr ~ ., scales = "free_y")
dados_carga %>%
ggplot(aes(x = k, y = Fraction, color = distribution)) +
geom_jitter(height = .1, alpha = .6) +
facet_wrap(stats.attr ~ ., scales = "free_y")
#  facet_grid(Trace ~ ., scales = "free_y")
dados_carga %>%
ggplot(aes(x = k, y = Fraction, color = distribution)) +
geom_jitter(height = .1, alpha = .6) +
facet_wrap(Trace ~ ., scales = "free_y")
#  facet_grid(Trace ~ ., scales = "free_y")
View(carga_trabalho_sintetica_gwa_t1)
View(dados_saida)
View(dados_carga)
dados_carga %>%
ggplot(aes(x = k, y = Fraction, color = distribution)) +
geom_jitter(height = .1, alpha = .6) +
facet_wrap(Trace ~ ., scales = "free_y") +
facet_wrap(stats.attr ~ ., scales = "free_y")
#  facet_grid(Trace ~ ., scales = "free_y")
dados_carga %>%
ggplot(aes(x = k, y = Fraction, color = distribution)) +
geom_jitter(height = .1, alpha = .6) +
facet_wrap(Trace ~ ., scales = "free_y")
#  facet_grid(Trace ~ ., scales = "free_y")
dados_carga %>%
ggplot(aes(x = k, y = Fraction, color = distribution)) +
geom_jitter(height = .1, alpha = .6) +
facet_wrap(Trace ~ ., scales = "free_y") +
facet_grid(stats.attr ~ ., scales = "free_y")
#  facet_grid(Trace ~ ., scales = "free_y")
dados_carga %>%
ggplot(aes(x = k, y = Fraction, color = distribution)) +
geom_jitter(height = .1, alpha = .6) +
#  facet_wrap(Trace ~ ., scales = "free_y") +
facet_grid(stats.attr ~ ., Trace ~ ., scales = "free_y")
dados_carga %>%
ggplot(aes(x = k, y = Fraction, color = distribution)) +
geom_jitter(height = .1, alpha = .6) +
#  facet_wrap(Trace ~ ., scales = "free_y") +
facet_grid(stats.attr , Trace , scales = "free_y")
dados_carga %>%
ggplot(aes(x = k, y = Fraction, color = distribution)) +
geom_jitter(height = .1, alpha = .6) +
#  facet_wrap(Trace ~ ., scales = "free_y") +
facet_grid(stats.attr ~ ., Trace ~ ., scales = "free_y")
dados_carga %>%
ggplot(aes(x = k, y = Fraction, color = distribution)) +
geom_jitter(height = .1, alpha = .6) +
#  facet_wrap(Trace ~ ., scales = "free_y") +
facet_grid(stats.attr ~ Trace, scales = "free_y")
#  facet_grid(Trace ~ ., scales = "free_y")
dados_carga %>%
ggplot(aes(x = k, y = Fraction, color = distribution)) +
geom_point(height = .1, alpha = .6) +
#  facet_wrap(Trace ~ ., scales = "free_y") +
facet_grid(stats.attr ~ Trace, scales = "free_y")
#  facet_grid(Trace ~ ., scales = "free_y")
kTraces <- list(c("gwa-t1", "data/gwa-traces-with-botid/gwa-t1/anon_jobs.gwf_jid.txt"),
c("gwa-t2", "data/gwa-traces-with-botid/gwa-t2/anon_jobs.gwf_jid.txt"),
c("gwa-t3", "data/gwa-traces-with-botid/gwa-t3/anon_jobs.gwf_jid.txt"),
c("gwa-t4", "data/gwa-traces-with-botid/gwa-t4/anon_jobs.gwf_jid.txt"),
c("gwa-t10", "data/gwa-traces-with-botid/gwa-t10/anon_jobs.gwf_jid.txt"),
c("gwa-t11", "data/gwa-traces-with-botid/gwa-t11/anon_jobs.gwf_jid.txt"))
kTraces
carga_trabalho_dist = dados_carga %>%
group_by(k, distribution, Trace, stats.attr) %>%
summarize(gof = sum(Fraction))
dados_carga %>%
ggplot(mapping = aes(y = gof, x = k, color = distribution )) +
facet_grid(stats.attr ~ Trace) +
geom_line()
carga_trabalho_dist = dados_carga %>%
group_by(k, distribution, Trace, stats.attr) %>%
summarize(gof = sum(Fraction))
dados_carga %>%
ggplot(mapping = aes(y = gof, x = k, color = distribution )) +
facet_grid(stats.attr ~ Trace) +
geom_line()
View(carga_trabalho_dist)
dados_carga_dist = dados_carga %>%
group_by(k, distribution, Trace, stats.attr) %>%
summarize(gof = sum(Fraction))
dados_carga_dist %>%
ggplot(mapping = aes(y = gof, x = k, color = distribution )) +
facet_grid(stats.attr ~ Trace) +
geom_line()
dados_carga %>%
ggplot(aes(x = k, y = Fraction, color = distribution)) +
geom_point(alpha = .6) +
#  facet_wrap(Trace ~ ., scales = "free_y") +
facet_grid(stats.attr ~ Trace, scales = "free_y")
#  facet_grid(Trace ~ ., scales = "free_y")
